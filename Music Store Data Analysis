-- SELECT * FROM album
-- QUESTION SET-1 EASY
-- Q1: Who is the senior most employee based on job title?

-- SELECT * FROM employee
-- ORDER BY levels desc 
-- limit 1

-- Q2: Which country have the most invoices?

-- Select COUNT(*) as c, billing_country from invoice 
-- group by billing_country
-- order by c desc

-- Q3: What are top 3 values of total invoices?

-- Select total from invoice
-- order  by total desc 
-- limit 3

-- Q4: Which City has the best customers? We would like to throw a promotional music festival in the city we made the most money. Write a query that returns one city thar has highest sum of invoices. Returns the both city name and sum of all total incoice 

-- Select SUM(total) as invoice_total, billing_city as City from invoice
-- group by City
-- order by invoice_total desc

-- Q5: Who is the best customer? The customer who
-- has spent the most money will be declared  the best customer.
-- Write a query that returns the persons who has spent the most money.

-- Select customer.customer_id, customer.first_name, customer.last_name, SUM(invoice.total) as total from customer 
-- join invoice on customer.customer_id = invoice.customer_id 
-- group by customer.customer_id
-- order by total desc
-- limit 1

-- QUESTION SET-2 (MODERATE)

-- Q1: Write a query to return email,first_name, last_name and genre
-- of all rock musics listener. Return your list ordered alphabetically by email start with A.

-- Select Distinct email, first_name, last_name
-- from customer
-- Join invoice on customer.customer_id  = invoice.customer_id
-- Join invoice_line on invoice.invoice_id = invoice_line.invoice_id
-- Where track_id in(
-- 	Select track_id from track
-- 	Join genre on track.genre_id = genre.genre_id
-- 	where genre.name like 'Rock'
-- 				 )
-- order by email;

-- Q2: Let's invite artist who have written the most rock music in our dataset.
-- Write a query the return artist name and total count of the top 10 rock bands

-- Select artist.artist_id, artist.name, count(artist.artist_id) as number_of_songs
-- from track
-- join album on album.album_id = track.album_id
-- join artist on artist.artist_id = album.artist_id
-- join genre on genre.genre_id = track.genre_id
-- where genre.name like 'Rock'
-- group by artist.artist_id
-- order by number_of_songs desc

-- Q3:Return al the track names that have a song length 
-- longer then the average song length. Return the name and Milliseonds for each track
-- Return order by the song length with longest song listed first

-- Select name, milliseconds 
-- from track
-- where milliseconds > (Select AVG(milliseconds) as avg_track_length from track)
-- order by milliseconds desc;

-- QUESTION SET-3 (ADVANCE)

-- Q1: Find how much amount  spent by each customer on artist?
-- write a query  to return customer name, artist name and total spent

Answer

-- WITH best_selling_artist As (
-- 	SELECT artist.artist_id AS artist_id, artist.name AS  artist_name,
-- 	SUM(invoice_line.unit_price*invoice_line.quantity) AS total_sales
-- 	FROM invoice_line
-- 	JOIN track ON track.track_id = invoice_line.track_id
-- 	JOIN album ON album.album_id = track.album_id
-- 	JOIN artist ON artist.artist_id = album.artist_id
-- 	GROUP BY 1
-- 	ORDER BY 3 DESC
-- 	LIMIT 1
-- )
-- SELECT  c.customer_id, c.first_name, c.last_name, bsa.artist_name,
-- SUM(il.unit_price*il.quantity) AS amount_spent
-- FROM invoice i
-- JOIN customer c ON c.customer_id = i.customer_id
-- JOIN invoice_line il ON il.invoice_id = i.invoice_id
-- JOIN track t ON t.track_id = il.track_id
-- JOIN album alb ON alb.album_id = t.album_id
-- JOIN best_selling_artist bsa ON bsa.artist_id = alb.album_id
-- GROUP BY 1,2,3,4
-- ORDER BY 5 DESC;

-- Q2:We want to find out the most popular music plays genre for each country we determine the most popular genre as the genre
--with the highest amount of puchases.Write a that returns each country along with  the top genre for countries where the
--maximum no. of purchases is shared return all genre.

Answer

-- WITH popular_genre as
-- (
-- 	SELECT COUNT(invoice_line.quantity) as purchases, customer.country, genre.name,genre.genre_id,
-- 	ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo
-- 	FROM invoice_line
-- 	JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
--  	JOIN customer ON customer.customer_id = invoice.customer_id
-- 	JOIN track ON track.track_id = invoice_line.track_id
-- 	JOIN genre ON  genre.genre_id = track.genre_id
-- 	GROUP BY 2,3,4
-- 	ORDER BY 2 ASC, 1 DESC
-- )
-- SELECT  * FROM  popular_genre WHERE RowNo <=1

-- Q3:Write a query that determine the customer that has spent the most on music for earch country.
--Write a query return the country along with the top customers and how much they spent for countries where the top amount spent is shared
--provide all customers who spent the amount

Answer

-- WITH RECURSIVE 
-- 	customer_with_country AS(
-- 	SELECT customer.customer_id, first_name, last_name, billing_country,
-- 	SUM(total) as total_spending
-- 	FROM invoice
-- 	JOIN  customer on customer.customer_id = invoice.customer_id
-- 	GROUP BY 1,2,3,4
-- 	ORDER BY 2,3 DESC),
	
-- 	country_max_spending AS(
-- 	SELECT billing_country, MAX(total_spending) AS max_spending
-- 	FROM customer_with_country
-- 	GROUP BY billing_country)
	
-- 	SELECT cc.billing_country, cc.total_spending, cc.first_name, cc.last_name, cc.customer_id
-- 	FROM customer_with_country cc
-- 	JOIN  country_max_spending ms 
-- 	ON cc.billing_country = ms.billing_country
-- 	WHERE cc.total_spending = ms.max_spending
-- 	ORDER BY 1;
	
	





 



